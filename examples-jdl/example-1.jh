/*
 * This is the application and entity model for university elearning
 * default values: https://www.jhipster.tech/jdl/#annexes
 * Use "jhipster import-jdl example-1.jh --blueprints nodejs" to generate the entire application
 * Use jhipster 6.x (example 6.4.1)
 */


application {
	config {
		applicationType monolith,
		baseName DemetraElearning,
		packageName com.amanganiello90.demetra,
		serverPort 8081,
		cacheProvider no,
		enableHibernateCache false,
		authenticationType jwt,
        databaseType sql,
		prodDatabaseType mssql,
		buildTool maven,
		serviceDiscoveryType false,
		clientPackageManager npm,
		useSass true,
		skipUserManagement false,
		enableTranslation false
	}
	entities *
}


// JDL definition entity for application

entity DemetraUser {
	gender String required,
	address String required,
	borndate LocalDate required,
    cf String required unique,
	usertype String required
}

/*

enum Gender {
	MALE,
	FEMALE
}

enum UserType {
	STUDENT,
	TEACHER
}
 */

entity SingleCourse {
	title String required unique,
	description String,
	isnotonlyfordegree Boolean required,
	cfu Integer
}


// relationship info: https://www.jhipster.tech/managing-relationships/


relationship ManyToMany {

	DemetraUser{coursetitle(title)} to SingleCourse{cfstudent(cf)},
}


/*
relationship OneToMany {

 DemetraUser{singlecourseteacher} to SingleCourse{cfteacher(cf) required}

}
 */

// Set pagination options
// paginate PostMessage with infinite-scroll
// paginate all with pagination

// Use Data Transfert Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
// service all with serviceImpl

// Set an angular suffix
// angularSuffix * with mySuffix
// filter *
