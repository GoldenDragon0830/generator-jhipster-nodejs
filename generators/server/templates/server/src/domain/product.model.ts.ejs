import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';
import { ProductCategory } from './product-category.model';
import { BaseModel } from './base/base.model';

export const enum Sizes {
  S = 'S',
  M = 'M',
  L = 'L',
  XL = 'XL',
  XXL = 'XXL',
}

export const enum ProductStatus {
  AVAILABLE = 'AVAILABLE',
  OUT_OF_STOCK = 'OUT_OF_STOCK',
  BACK_ORDER = 'BACK_ORDER',
}

@Entity('product')
export class Product extends BaseModel {
  @Column() 
  name?: string;
  @Column() 
  description?: string;
  @Column() 
  price?: number;
  @Column() 
  size?: Sizes;
  @Column() 
  status?: ProductStatus;
  @Column() 
  imageContentType?: string;
  // @Column() 
  image?: any;
  @Column(type => ProductCategory) 
  category?: ProductCategory;
}

export const defaultValue: Readonly<Product> = new Product();

export const productSchema = {
  id: { type: 'string', required: false, example: '1' },
  name: { type: 'string', required: false, example: 'Producto' },
  description: { type: 'string', required: false, example: 'Descripcion' },
  price: { type: 'number', required: true, example: 9.99 },
};
