import { <%= asEntity('User') %> } from '../../domain/user.entity';
import { <%= asDto('User')%> } from '../dto/user.dto';

/**
 * An User mapper object.
 */
export class UserMapper {

  static fromDTOtoEntity (userDTO: <%= asDto('User')%>): <%= asEntity('User') %> {
    if (!userDTO) {
      return;
    }
    let user = new <%= asEntity('User') %>();
    const fields = Object.getOwnPropertyNames(userDTO);
    fields.forEach(field => {
         user[field] = userDTO[field];
    });
    return user;

  }

  static fromEntityToDTO (user: <%= asEntity('User') %>): <%= asDto('User')%> {
    if (!user) {
      return;
    }
    let userDTO = new <%= asDto('User')%>();

    const fields = Object.getOwnPropertyNames(user);

    fields.forEach(field => {
         userDTO[field] = user[field];
    });

    return userDTO;
  }
}
