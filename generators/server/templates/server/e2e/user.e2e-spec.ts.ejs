import { Test, TestingModule } from '@nestjs/testing';
import request = require('supertest');
import { AppModule } from '../src/app.module';
import { INestApplication } from '@nestjs/common';
import { AuthGuard } from '../src/security/guards/auth.guard';
import { RolesGuard } from '../src/security/guards/roles.guard';
import { UserService } from '../src/service/user.service';


describe('User', () => {
    let app: INestApplication;

    const userService = { findAndCount: (): any => ['userList', 'count'] };
    const authGuard = { canActivate: (): any => true };
    const rolesGuard = { canActivate: (): any => true };

    beforeEach(async () => {
        const moduleFixture: TestingModule = await Test.createTestingModule({
            imports: [AppModule],
        }).overrideProvider(UserService)
            .useValue(userService)
            .overrideGuard(AuthGuard)
            .useValue(authGuard)
            .overrideGuard(RolesGuard)
            .useValue(rolesGuard)
            .compile();

        app = moduleFixture.createNestApplication();
        await app.init();
    });

    it('/GET all users', () => request(app.getHttpServer())
        .get('/api/users')
        .expect(200)
        .expect(userService.findAndCount()[0]));

    afterAll(async () => {
        await app.close();
    });
});
