import { TypeOrmModuleOptions } from '@nestjs/typeorm';
<%_ if (databaseType === 'mongodb') { _%> import { MongoMemoryServer } from 'mongodb-memory-server'; <%_ } _%>

<%_ if (databaseType === 'mongodb') { _%>
async function ormConfig(): Promise<TypeOrmModuleOptions> {
let mongod;
if (process.env.BACKEND_ENV !== 'prod') {
    mongod = await MongoMemoryServer.create();
}
<%_ } else { _%>
function ormConfig(): TypeOrmModuleOptions {
<%_ } _%>
    const commonConf = {
        SYNCRONIZE: false,
        ENTITIES: [__dirname + '/domain/*.entity{.ts,.js}'],
        MIGRATIONS: [__dirname + '/migrations/**/*{.ts,.js}'],
        CLI: {
            migrationsDir: 'src/migrations',
        },
        MIGRATIONS_RUN: true,
    };

    let ormconfig: TypeOrmModuleOptions = {
        name: 'default',
        type: '<%= devDatabaseType %>',
        <%_ if (databaseType === 'mongodb') { _%>
        host: 'localhost',
        port: mongod?await mongod.getPort():0,
        database: mongod?await mongod.getDbName():'dev',
        useNewUrlParser: true,
        useUnifiedTopology: true,
        <%_ } else { _%>
        database: '../target/db/sqlite-dev-db.sql',
        <%_ } _%>
        logging: true,
        synchronize: true,
        entities: commonConf.ENTITIES,
        migrations: commonConf.MIGRATIONS,
        cli: commonConf.CLI,
        migrationsRun: commonConf.MIGRATIONS_RUN,
    };


    if (process.env.BACKEND_ENV === 'prod') {
        ormconfig = {
            name: 'default',
            type: '<%= (prodDatabaseType === 'postgresql') ? 'postgres' : prodDatabaseType %>',
            database: '<%= (prodDatabaseType === 'mongodb') ? 'admin': baseName.toLowerCase() %>',
            host: 'localhost',
            port: <%= dbPortValue %>,
            username: 'sa',
            password: 'yourStrong(!)Password',
            logging: false,
            synchronize: commonConf.SYNCRONIZE,
            entities: commonConf.ENTITIES,
            migrations: commonConf.MIGRATIONS,
            cli: commonConf.CLI,
            migrationsRun: commonConf.MIGRATIONS_RUN,
        };
    }

    if (process.env.BACKEND_ENV === 'test') {
    ormconfig = {
        name: 'default',
        type: '<%= devDatabaseType %>',
        <%_ if (databaseType === 'mongodb') { _%>
        host: 'localhost',
        port: await mongod.getPort(),
        database: await mongod.getDbName(),
        useNewUrlParser: true,
        useUnifiedTopology: true,
        <%_ } else { _%>
        database: ':memory:',
        <%_ } _%>
        keepConnectionAlive: true,
        logging: true,
        synchronize: true,
        entities: commonConf.ENTITIES,
        migrations: commonConf.MIGRATIONS,
        cli: commonConf.CLI,
        migrationsRun: commonConf.MIGRATIONS_RUN,
    };
    }
    return ormconfig;
}

export { ormConfig };
